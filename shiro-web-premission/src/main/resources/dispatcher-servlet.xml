<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd"
       default-lazy-init="true">

    <description>Spring mvc</description>

    <!-- 自动扫描器 -->
    <context:component-scan base-package="com.shiro.mmc.system.web.premission">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:include-filter type="annotation" expression="org.springframework.context.annotation.Configuration"/>
    </context:component-scan>

    <!-- mediaType -->
    <bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
        <property name="mediaTypes">
            <map>
                <entry key="xml" value="application/xml"/>
                <entry key="json" value="application/json"/>
            </map>
        </property>
        <property name="ignoreAcceptHeader" value="true"/>
        <property name="favorPathExtension" value="true"/>
    </bean>

        <!-- 默认的注解映射的支持，org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -->
    <mvc:annotation-driven content-negotiation-manager="contentNegotiationManager">
        <mvc:message-converters register-defaults="true">
        <!-- 将StringHttpMessageConverter的默认编码设为UTF-8 -->
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <constructor-arg value="UTF-8" />
            </bean>
            <!-- 将Jackson2HttpMessageConverter的默认格式化输出为false -->
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list><value>application/json;charset=UTF-8</value></list>
                </property>
                <property name="prettyPrint" value="false"/>
                <!-- 自定义json转换器 -->
                <property name="objectMapper">
                    <bean class="com.fasterxml.jackson.databind.ObjectMapper">
                        <property name="dateFormat">
                            <bean class="java.text.SimpleDateFormat">
                                <!-- 设置全局返回JSON到前端时日期格式化 -->
                                <constructor-arg type="java.lang.String" value="yyyy-MM-dd HH:mm:ss"/>
                            </bean>
                        </property>
                    </bean>
                </property>

            </bean>
            <!-- 使用XML格式输出数据 -->
            <bean class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter">
                <!-- 配置自定义xml转换器
                <constructor-arg>
                    <bean class="org.springframework.oxm.xstream.XStreamMarshaller">
                        <property name="streamDriver">
                            <bean class="com.thoughtworks.xstream.io.xml.StaxDriver"/>
                        </property>
                        <property name="annotatedClasses">
                            <list>
                                <value>com.thinkgem.jeesite.common.persistence.BaseEntity</value>
                                <value>com.thinkgem.jeesite.common.supcan.treelist.TreeList</value>
                                <value>com.thinkgem.jeesite.common.supcan.treelist.cols.Col</value>
                                <value>com.thinkgem.jeesite.common.supcan.treelist.cols.Group</value>
                            </list>
                        </property>
                    </bean>
                </constructor-arg>
                -->
                <property name="supportedMediaTypes" value="application/xml"></property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!-- 对静态资源文件的访问， 将无法mapping到Controller的path交给default servlet handler处理 -->
    <mvc:default-servlet-handler />

    <!-- 静态资源映射 -->
    <mvc:resources mapping="/static/**" location="/WEB-INF/static/" cache-period="31536000"/>
    <mvc:resources mapping="/bootstrap/**" location="/WEB-INF/static/bootstrap/" />
    <mvc:resources mapping="/bootstrap/js/**" location="/WEB-INF/static/bootstrap/js/" />
    <mvc:resources mapping="/bootstrap/css/**" location="/WEB-INF/static/bootstrap/css/" />
    <mvc:resources mapping="/bootstrap/fonts/**" location="/WEB-INF/static/bootstrap/fonts/" />
    <mvc:resources mapping="/css/**" location="/WEB-INF/static/css/" />
    <mvc:resources mapping="/formwork/**" location="/WEB-INF/static/formwork/" />
    <mvc:resources mapping="/images/**" location="/WEB-INF/static/images/" />
    <mvc:resources mapping="/js/**" location="/WEB-INF/static/js/" />
    <mvc:resources mapping="/common/**" location="/WEB-INF/static/common/" />

    <!-- 定义视图文件解析 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- 异常处理 -->
    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
                <prop key="org.apache.shiro.authz.UnauthorizedException">error/403</prop>
                <!--
                <prop key="java.lang.Throwable">error/500</prop>
                -->
            </props>
        </property>
    </bean>

    <!-- 上传文件拦截，设置最大上传文件大小   10M=10*1024*1024(B)=10485760 bytes -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 10M 1024*1024*1024 -->
        <property name="maxUploadSize" value="10485760" />
    </bean>
</beans>